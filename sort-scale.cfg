#random.seed 1234567891
simulation.endtime CYCLES*CYCLELENGTH
simulation.logtime CYCLELENGTH

simulation.experiments 1

simulation.debug

#range.0 K;10:16|3

CYCLES 100
CYCLELENGTH 1000
BITS 60
DEGREE 10
MSGSIZE 20
TABUSIZE 4
INACTIVE 4
CAPACITY 128
INIT 20
K 13
SIZE 2^K
CRASH 0 # SIZE/(10^2)
DROP 0.10

network.size SIZE
network.node peersim.core.GeneralNode

protocol.aggregation size.EDAggregation
{
  linkable sample
  threshold 5
  precision 0
  step CYCLELENGTH
  transport transport
}
  

protocol.ring size.XTMan
{
  degree DEGREE
  msgsize MSGSIZE
  tabu TABUSIZE
  capacity CAPACITY
  aggregation aggregation
  distance SortedRingDistance
  distance.protocol ring
  inactive INACTIVE*CYCLELENGTH
}

protocol.xtman EDEpidemicManager
{
  protocol ring
  transport transport
  period CYCLELENGTH
}

protocol.sample IdleProtocol
{
  capacity INIT
}

protocol.underlying E2ETransport

init.sch CDScheduler
{
  protocol aggregation
  randstart
}

protocol.transport UnreliableTransport
{
  transport underlying
  drop DROP
}


init.id peersim.vector.UniformDistribution
{
  protocol ring
  min 0
  max 2^BITS-1
  setter setID
}

init.random peersim.dynamics.WireKOut
{
  protocol ring
  k INIT
  pack
}

init.idle peersim.dynamics.WireKOut
{
  protocol sample
  k INIT
}

init.king KingParser
{
  ratio 0.001
}

init.router UniformRouterAssignment
{
  protocol underlying
}

control.aggregation VectorObserver
{
  protocol aggregation
  getter getValue
  step CYCLELENGTH
}

control.crash DynamicNetwork
{
  add -CRASH
  step CYCLELENGTH
}
